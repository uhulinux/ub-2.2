## Description: Added a new keyboard shortcut 's' to stop recording.
## Origin: upstream, no
## Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/gnomeradio/+bug/1026417
## Author: Pojar George <geoubuntu@gmail.com> 
## Forwarded: no
Index: gnomeradio-1.8/help/C/gnomeradio.xml
===================================================================
--- gnomeradio-1.8.orig/help/C/gnomeradio.xml
+++ gnomeradio-1.8/help/C/gnomeradio.xml
@@ -589,7 +589,15 @@ data is being stored.
 			<keycap>r</keycap>
 		</entry>
         <entry>
-			Open the recording dialog.
+			Start recording.
+		</entry>
+	  </row>
+	  <row rowsep="0">
+        <entry>
+			<keycap>s</keycap>
+		</entry>
+        <entry>
+			Stop recording.
 		</entry>
 	  </row>
 	  <row rowsep="0">
Index: gnomeradio-1.8/src/record.c
===================================================================
--- gnomeradio-1.8.orig/src/record.c
+++ gnomeradio-1.8/src/record.c
@@ -213,7 +213,7 @@ void run_status_window(Recording *record
 	timeout_id = g_timeout_add(500, (GSourceFunc) timeout_cb, recording);
 }
 
-static void button_clicked_cb(GtkButton *button, gpointer data)
+void stop_rec_button_clicked_cb(GtkButton *button, gpointer data)
 {
 	Recording *recording = data;
 	close_status_window();
@@ -222,7 +222,7 @@ static void button_clicked_cb(GtkButton
 
 static gint delete_event_cb(GtkWidget* window, GdkEventAny* e, gpointer data)
 {
-	button_clicked_cb(NULL, data);
+	stop_rec_button_clicked_cb(NULL, data);
 	return TRUE;
 }
 
@@ -332,7 +332,8 @@ GtkWidget* record_status_window(Recordin
 	gtk_widget_grab_focus (button);
 
 	g_signal_connect(G_OBJECT(status_dialog), "delete_event", G_CALLBACK(delete_event_cb), recording);
-	g_signal_connect(G_OBJECT(button), "clicked", G_CALLBACK(button_clicked_cb), recording);
+	g_signal_connect(G_OBJECT(button), "clicked", G_CALLBACK(stop_rec_button_clicked_cb), recording);
+	g_signal_connect(G_OBJECT(status_dialog), "key-press-event", G_CALLBACK(key_press_event_cb), recording);
 
 	gtk_window_set_modal(GTK_WINDOW(status_dialog), TRUE);
 
Index: gnomeradio-1.8/src/gui.c
===================================================================
--- gnomeradio-1.8.orig/src/gui.c
+++ gnomeradio-1.8/src/gui.c
@@ -1154,7 +1154,7 @@ gconf_error_handler(GConfClient *client,
 	g_print("GConf error: %s\n", error->message);
 }
 
-static gboolean
+gboolean
 key_press_event_cb(GtkWidget *app, GdkEventKey *event, gpointer data)
 {
 	int vol = (int)(gtk_volume_button_get_value(mute_button) + 0.5f);
@@ -1172,6 +1172,9 @@ key_press_event_cb(GtkWidget *app, GdkEv
 		case GDK_KEY_r: 
 				rec_button_clicked_cb(NULL, app);
 				break;
+		case GDK_KEY_s:
+				stop_rec_button_clicked_cb(NULL, data);
+				break;
 		case GDK_KEY_f: 
 				scfw_button_clicked_cb(NULL, NULL);
 				break;
Index: gnomeradio-1.8/src/gui.h
===================================================================
--- gnomeradio-1.8.orig/src/gui.h
+++ gnomeradio-1.8/src/gui.h
@@ -72,6 +72,9 @@ void preset_menuitem_activate_cb(GtkMenu
 
 void tray_icon_items_set_sensible(gboolean sensible);
 
+gboolean
+key_press_event_cb(GtkWidget *app, GdkEventKey *event, gpointer data);
+
 void display_help_cb(char *topic);
 
 void change_preset(gboolean next);
Index: gnomeradio-1.8/src/record.h
===================================================================
--- gnomeradio-1.8.orig/src/record.h
+++ gnomeradio-1.8/src/record.h
@@ -19,6 +19,8 @@
 
 void run_status_window(Recording *recording);
 
+void stop_rec_button_clicked_cb(GtkButton *button, gpointer data);
+
 GtkWidget* record_status_window(Recording *recording);	
 
 #endif
