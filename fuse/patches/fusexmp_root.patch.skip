diff -Naurdp a/example/fusexmp_fh.c b/example/fusexmp_fh.c
--- a/example/fusexmp_fh.c	2006-12-09 19:51:13.000000000 +0100
+++ b/example/fusexmp_fh.c	2007-02-27 19:30:35.000000000 +0100
@@ -26,12 +26,35 @@
 #ifdef HAVE_SETXATTR
 #include <sys/xattr.h>
 #endif
+#include <stdlib.h>
+
+static char *convpath(const char *path)
+{
+	char *res;
+	char *root;
+	
+	root = getenv("FUSEXMP_ROOT");
+	
+	if (!root)
+		return strdup(path);
+	
+	res = malloc(strlen(root) + strlen(path) + 1);
+	if (res == NULL)
+		return NULL;
+
+	strcpy(res, root);
+	strcat(res, path);
+
+	return res;
+}
 
 static int xmp_getattr(const char *path, struct stat *stbuf)
 {
     int res;
 
+    path = convpath(path);
     res = lstat(path, stbuf);
+    free(path);
     if (res == -1)
         return -errno;
 
@@ -45,7 +68,9 @@ static int xmp_fgetattr(const char *path
 
     (void) path;
 
+    path = convpath(path);
     res = fstat(fi->fh, stbuf);
+    free(path);
     if (res == -1)
         return -errno;
 
@@ -56,7 +81,9 @@ static int xmp_access(const char *path, 
 {
     int res;
 
+    path = convpath(path);
     res = access(path, mask);
+    free(path);
     if (res == -1)
         return -errno;
 
@@ -67,7 +94,9 @@ static int xmp_readlink(const char *path
 {
     int res;
 
+    path = convpath(path);
     res = readlink(path, buf, size - 1);
+    free(path);
     if (res == -1)
         return -errno;
 
@@ -77,7 +106,11 @@ static int xmp_readlink(const char *path
 
 static int xmp_opendir(const char *path, struct fuse_file_info *fi)
 {
-    DIR *dp = opendir(path);
+    DIR *dp;
+    
+    path = convpath(path);
+    dp = opendir(path);
+    free(path);
     if (dp == NULL)
         return -errno;
 
@@ -122,10 +155,12 @@ static int xmp_mknod(const char *path, m
 {
     int res;
 
+    path = convpath(path);
     if (S_ISFIFO(mode))
         res = mkfifo(path, mode);
     else
         res = mknod(path, mode, rdev);
+    free(path);
     if (res == -1)
         return -errno;
 
@@ -136,7 +171,9 @@ static int xmp_mkdir(const char *path, m
 {
     int res;
 
+    path = convpath(path);
     res = mkdir(path, mode);
+    free(path);
     if (res == -1)
         return -errno;
 
@@ -147,7 +184,9 @@ static int xmp_unlink(const char *path)
 {
     int res;
 
+    path = convpath(path);
     res = unlink(path);
+    free(path);
     if (res == -1)
         return -errno;
 
@@ -158,7 +197,9 @@ static int xmp_rmdir(const char *path)
 {
     int res;
 
+    path = convpath(path);
     res = rmdir(path);
+    free(path);
     if (res == -1)
         return -errno;
 
@@ -202,7 +243,9 @@ static int xmp_chmod(const char *path, m
 {
     int res;
 
+    path = convpath(path);
     res = chmod(path, mode);
+    free(path);
     if (res == -1)
         return -errno;
 
@@ -213,7 +256,9 @@ static int xmp_chown(const char *path, u
 {
     int res;
 
+    path = convpath(path);
     res = lchown(path, uid, gid);
+    free(path);
     if (res == -1)
         return -errno;
 
@@ -224,7 +269,9 @@ static int xmp_truncate(const char *path
 {
     int res;
 
+    path = convpath(path);
     res = truncate(path, size);
+    free(path);
     if (res == -1)
         return -errno;
 
@@ -266,7 +313,9 @@ static int xmp_create(const char *path, 
 {
     int fd;
 
+    path = convpath(path);
     fd = open(path, fi->flags, mode);
+    free(path);
     if (fd == -1)
         return -errno;
 
@@ -278,7 +327,9 @@ static int xmp_open(const char *path, st
 {
     int fd;
 
+    path = convpath(path);
     fd = open(path, fi->flags);
+    free(path);
     if (fd == -1)
         return -errno;
 
@@ -316,7 +367,9 @@ static int xmp_statfs(const char *path, 
 {
     int res;
 
+    path = convpath(path);
     res = statvfs(path, stbuf);
+    free(path);
     if (res == -1)
         return -errno;
 
@@ -373,7 +426,11 @@ static int xmp_fsync(const char *path, i
 static int xmp_setxattr(const char *path, const char *name, const char *value,
                         size_t size, int flags)
 {
-    int res = lsetxattr(path, name, value, size, flags);
+    int res;
+
+    path = convpath(path);
+    res = lsetxattr(path, name, value, size, flags);
+    free(path);
     if (res == -1)
         return -errno;
     return 0;
@@ -382,7 +439,11 @@ static int xmp_setxattr(const char *path
 static int xmp_getxattr(const char *path, const char *name, char *value,
                     size_t size)
 {
-    int res = lgetxattr(path, name, value, size);
+    int res;
+    
+    path = convpath(path);
+    res = lgetxattr(path, name, value, size);
+    free(path);
     if (res == -1)
         return -errno;
     return res;
@@ -390,7 +451,11 @@ static int xmp_getxattr(const char *path
 
 static int xmp_listxattr(const char *path, char *list, size_t size)
 {
-    int res = llistxattr(path, list, size);
+    int res;
+    
+    path = convpath(path);
+    res = llistxattr(path, list, size);
+    free(path);
     if (res == -1)
         return -errno;
     return res;
@@ -398,7 +463,11 @@ static int xmp_listxattr(const char *pat
 
 static int xmp_removexattr(const char *path, const char *name)
 {
-    int res = lremovexattr(path, name);
+    int res;
+
+    path = convpath(path);
+    res = lremovexattr(path, name);
+    free(path);
     if (res == -1)
         return -errno;
     return 0;
