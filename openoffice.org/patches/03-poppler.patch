diff -Naur orig/main/sdext/source/pdfimport/xpdfwrapper/pdfioutdev_gpl.cxx patched/main/sdext/source/pdfimport/xpdfwrapper/pdfioutdev_gpl.cxx
--- orig/main/sdext/source/pdfimport/xpdfwrapper/pdfioutdev_gpl.cxx	2014-02-25 09:26:59.000000000 +0100
+++ patched/main/sdext/source/pdfimport/xpdfwrapper/pdfioutdev_gpl.cxx	2014-05-03 23:11:31.843457514 +0200
@@ -36,7 +36,22 @@
 #pragma warning(push, 1)
 #endif
 
+#if !POPPLER_CHECK_VERSION(0, 18, 0)
+#ifdef ENABLE_LIBJPEG
+#include "DCTStream.h"
+#endif
+#endif
+
+// sigh, UTF8.h was removed in poppler-0.21.0 and put back in 0.21.1
+// FIXME: we can't use #if POPPLER_CHECK_VERSION(0, 21, 0) && !POPPLER_CHECK_VERSION(0, 21, 1)
+// because the internal poppler does not provide poppler-version.h and the macro always returns 0
+#if POPPLER_CHECK_VERSION(0, 21, 1)
+#include "UTF8.h"
+#elif POPPLER_CHECK_VERSION(0, 21, 0)
+#include "UTF.h"
+#else
 #include "UTF8.h"
+#endif
 
 #if defined __SUNPRO_CC
 #pragma enable_warn
@@ -140,7 +155,11 @@
 void writeJpeg_( OutputBuffer& o_rOutputBuf, Stream* str, bool bWithLinefeed )
 {
     // dump JPEG file as-is
+#if POPPLER_CHECK_VERSION(0, 18, 0)
+	str = str->getNextStream();
+#else
     str = ((DCTStream *)str)->getRawStream();
+#endif
     str->reset();
 
     int c;
@@ -388,8 +407,6 @@
     int nSize = 0;
 
     GooString* pFamily = gfxFont->getName();
-    if( ! pFamily )
-        pFamily = gfxFont->getOrigName();
     if( pFamily )
     {
         aNewFont.familyName.clear();
@@ -466,7 +483,11 @@
 {
 }
 
-void PDFOutDev::startPage(int /*pageNum*/, GfxState* state)
+void PDFOutDev::startPage(int /*pageNum*/, GfxState* state
+#if POPPLER_CHECK_VERSION(0, 23, 0) || POPPLER_CHECK_VERSION(0, 24, 0)
+						  , XRef* /*xref*/
+#endif
+)
 {
     assert(state);
     printf("startPage %f %f\n",
@@ -479,7 +500,13 @@
     printf("endPage\n");
 }
 
+#if POPPLER_CHECK_VERSION(0, 19, 0)
+void PDFOutDev::processLink(AnnotLink *link)
+#elif POPPLER_CHECK_VERSION(0, 17, 0)
+void PDFOutDev::processLink(AnnotLink *link, Catalog *);
+#else
 void PDFOutDev::processLink(Link* link, Catalog*)
+#endif
 {
     assert(link);
 
diff -Naur orig/main/sdext/source/pdfimport/xpdfwrapper/pdfioutdev_gpl.hxx patched/main/sdext/source/pdfimport/xpdfwrapper/pdfioutdev_gpl.hxx
--- orig/main/sdext/source/pdfimport/xpdfwrapper/pdfioutdev_gpl.hxx	2014-02-25 09:26:59.000000000 +0100
+++ patched/main/sdext/source/pdfimport/xpdfwrapper/pdfioutdev_gpl.hxx	2014-05-03 07:49:06.565386623 +0200
@@ -22,6 +22,8 @@
 #ifndef INCLUDED_PDFI_OUTDEV_HXX
 #define INCLUDED_PDFI_OUTDEV_HXX
 
+#define POPPLER_CHECK_VERSION(major,minor,micro) (0)
+
 #if defined __GNUC__
 #pragma GCC system_header
 #elif defined __SUNPRO_CC
@@ -55,7 +57,14 @@
 class GfxFont;
 class PDFDoc;
 #ifndef SYSTEM_POPPLER
+#define POPPLER_CHECK_VERSION(major,minor,micro) (0)
 typedef GString GooString;
+#else
+#include <cpp/poppler-version.h>
+#define POPPLER_CHECK_VERSION(major,minor,micro) \
+ (POPPLER_VERSION_MAJOR > (major) || \
+ (POPPLER_VERSION_MAJOR == (major) && POPPLER_VERSION_MINOR > (minor)) || \
+ (POPPLER_VERSION_MAJOR == (major) && POPPLER_VERSION_MINOR == (minor) && POPPLER_VERSION_MICRO >= (micro)))
 #endif
 
 namespace pdfi
@@ -170,7 +179,11 @@
         virtual void setDefaultCTM(double *ctm);
         
         // Start a page.
-        virtual void startPage(int pageNum, GfxState *state);
+		virtual void startPage(int pageNum, GfxState *state
+#if POPPLER_CHECK_VERSION(0, 23, 0) || POPPLER_CHECK_VERSION(0, 24, 0)
+						  , XRef *xref
+#endif
+		);
         
         // End a page.
         virtual void endPage();
@@ -185,8 +198,14 @@
         // virtual void cvtUserToDev(double ux, double uy, int *dx, int *dy);
         
         //----- link borders
+#if POPPLER_CHECK_VERSION(0, 19, 0)
+		virtual void processLink(AnnotLink *link);
+#elif POPPLER_CHECK_VERSION(0, 17, 0)
+		virtual void processLink(AnnotLink *link, Catalog *catalog);
+#else
         virtual void processLink(Link *link, Catalog *catalog);
-        
+#endif
+		        
         //----- save/restore graphics state
         virtual void saveState(GfxState *state);
         virtual void restoreState(GfxState *state);
