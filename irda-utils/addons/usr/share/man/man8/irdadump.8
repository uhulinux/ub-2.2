.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X<wehe@tuxmobil.org>
WernerHeuser2001-03-26Done.
s, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "IRDADUMP" "8" "29 April 2003" "" ""

.SH NAME
irdadump \- monitors the IrDA traffic on one or more links.
.SH SYNOPSIS

\fBirdadump\fR [ \fB\fI-b\fB\fR ] [ \fB\fI-c n\fB\fR ] [ \fB\fI-d\fB\fR ] [ \fB\fI-x\fB\fR ] [ \fB\fI-s n\fB\fR ] [ \fB\fI-t\fB\fR ] [ \fB\fI-l\fB\fR ] [ \fB\fI-v\fB\fR ] [ \fB\fI-i device\fB\fR ]

.SH "OPTIONS"
.PP
\fB-b\fR dump bytes in columns
.PP
\fB-c n\fR set snapcols for byte printing with -b option
.PP
\fB-d\fR prints the time difference between the current and the previous frame
.PP
\fB-x\fR dump frame (bytes and ascii)
.PP
\fB-s n\fR set snaplen for -b and -x option
.PP
\fB-t\fR force TTP decoding of unknown connections
.PP
\fB-l\fR set line buffering on output file
.PP
\fB-v\fR verbose
.PP
\fB-i device\fR interface
.SH "DESCRIPTION"
.PP
\fBirdadump\fR is a tool for monitoring the IrDA traffic on 
one or more links. Just write "make" to compile the program. When you run 
the program, you should be able to see the IrDA traffic (if any). 
.PP
One advantage of implementing IrDA device drivers as network device drivers is that you should be able to attach sniffers to the device (or actually the packet type). That way, it is possible to use a really handy utility called \fBirdadump\fR (instead of \fBtcpdump\fR). This will make debugging MUCH easier. Linux-2.2 implements the BPF (Berkeley Packet Filter), so its possible to filter out exactly the frames you want to see.
You may use \fBhostname\fR to separate different machines names.
Or \fBgrep\fR to filter the output, too.
.PP
\fBirdadump\fR must be run as root or installed setuid root, 
as it requires root privileges.
.SH "EXAMPLES"
.PP
The output should look something like this:

.nf
/ # ./irdadump 
20:11:45.412199 xid:cmd 0x0015c23b > 0xffffffff S=6 s=0
20:11:45.492137 xid:cmd 0x0015c23b > 0xffffffff S=6 s=1
20:11:45.572137 xid:cmd 0x0015c23b > 0xffffffff S=6 s=2
20:11:45.652208 xid:cmd 0x0015c23b > 0xffffffff S=6 s=3
20:11:45.732137 xid:cmd 0x0015c23b > 0xffffffff S=6 s=4
20:11:45.812137 xid:cmd 0x0015c23b > 0xffffffff S=6 s=5
20:11:45.892175 xid:cmd 0x0015c23b > 0xffffffff S=6 s=255 Linux
20:11:45.902362 xid:rsp 0xf7be8388 < 0x0015c23b S=6 s=5 ACTiSYS IR100M
20:11:48.412197 xid:cmd 0x0015c23b > 0xffffffff S=6 s=0
20:11:48.492656 xid:cmd 0x0015c23b > 0xffffffff S=6 s=1
20:11:48.572177 xid:cmd 0x0015c23b > 0xffffffff S=6 s=2
20:11:48.652169 xid:cmd 0x0015c23b > 0xffffffff S=6 s=3
20:11:48.732177 xid:cmd 0x0015c23b > 0xffffffff S=6 s=4
20:11:48.812153 xid:cmd 0x0015c23b > 0xffffffff S=6 s=5
20:11:48.822371 xid:rsp 0xf7be8388 < 0x0015c23b S=6 s=4 ACTiSYS IR100M

15 packets received by filter
.fi
Turning on the "-d" option will make irdadump print the time difference
between the current and the previous frame:

.nf
/ # ./irdadump -d
20:11:18.412475 (0982.06 ms) xid:cmd 0x0015c23b > 0xffffffff S=6 s=0
20:11:18.492345 (0079.87 ms) xid:cmd 0x0015c23b > 0xffffffff S=6 s=1
20:11:18.572376 (0080.03 ms) xid:cmd 0x0015c23b > 0xffffffff S=6 s=2
20:11:18.652979 (0080.60 ms) xid:cmd 0x0015c23b > 0xffffffff S=6 s=3
20:11:18.732354 (0079.38 ms) xid:cmd 0x0015c23b > 0xffffffff S=6 s=4
20:11:18.755093 (0022.74 ms) xid:rsp 0xf7be8388 < 0x0015c23b S=6 s=3 ACTiSYS IR100M
20:11:18.812350 (0057.26 ms) xid:cmd 0x0015c23b > 0xffffffff S=6 s=5
20:11:18.892518 (0080.17 ms) xid:cmd 0x0015c23b > 0xffffffff S=6 s=255 Linux
20:11:21.412486 (2519.97 ms) xid:cmd 0x0015c23b > 0xffffffff S=6 s=0
20:11:21.492395 (0079.91 ms) xid:cmd 0x0015c23b > 0xffffffff S=6 s=1
20:11:21.572368 (0079.97 ms) xid:cmd 0x0015c23b > 0xffffffff S=6 s=2
20:11:21.652405 (0080.04 ms) xid:cmd 0x0015c23b > 0xffffffff S=6 s=3
20:11:21.732458 (0080.05 ms) xid:cmd 0x0015c23b > 0xffffffff S=6 s=4
.fi
\fBirdadump\fR must be run as root or installed setuid root, 
as it requires root privileges.
.PP
\fBirdadump -d -x -s 256\fR will check the contents of the frames. This should tell us if the frames have malformed content, or if the irda stack is doing something wrong.
.SH "DIAGNOSTICS"
.PP
N.N.
.SH "BUGS"
.PP
N.N.
.SH "SEE ALSO"
.PP
irattach(8), irdaping(8), irdadump(8), findchip(8), 
irpsion5(8), modprobe(8)
.PP
Linux/IrDA Project http://irda.sourceforge.net -*-
Linux/IrDA-Tutorial http://www.hpl.hp.com/personal/Jean_Tourrilhes/IrDA/index.html -*-
Infrared-HOWTO http://tuxmobil.org/howtos.html
.SH "AUTHOR"
.PP
This manual page is written by Werner Heuser
<wehe@tuxmobil.org>. It is based on the READMEs
from \fBirda-utils\fR by the Linux/IrDA Project and the Linux/IrDA-Tutorial.
.SH "COPYRIGHT"
.PP
Copyright (c) 2001 Werner Heuser
.PP
Permission is granted to copy, distribute 
and/or modify this document under
the terms of the GNU Free Documentation
License (GFDL), Version 1.1 or any later version published by the 
Free Software Foundation; with no Invariant Sections, no Front-Cover
Texts and no Back-Cover Texts.
